import stream from './stream';
declare const a: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, abbr: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, acronym: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, address: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, applet: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, area: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, article: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, aside: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, audio: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, b: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, base: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, basefont: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, bdo: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, bgsound: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, big: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, blink: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, blockquote: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, body: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, br: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, button: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, canvas: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, caption: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, center: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, cite: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, code: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, col: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, colgroup: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, command: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, datalist: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, dd: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, del: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, details: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, dfn: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, div: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, dl: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, dt: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, em: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, embed: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, fieldset: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, figcaption: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, figure: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, font: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, footer: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, form: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, frame: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, frameset: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, h1: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, h2: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, h3: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, h4: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, h5: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, h6: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, head: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, header: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, hgroup: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, hr: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, html: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, i: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, iframe: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, img: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, input: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, ins: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, isindex: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, kbd: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, keygen: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, label: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, legend: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, li: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, link: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, listing: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, map: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, mark: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, marquee: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, math: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, menu: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, meta: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, meter: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, nav: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, nextid: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, nobr: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, noembed: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, noframes: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, noscript: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, object: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, ol: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, optgroup: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, option: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, output: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, p: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, param: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, plaintext: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, pre: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, progress: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, q: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, rp: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, rt: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, ruby: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, s: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, samp: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, script: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, section: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, select: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, small: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, source: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, spacer: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, span: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, strike: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, strong: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, style: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, sub: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, sup: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, summary: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, svg: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, table: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, tbody: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, td: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, textarea: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, tfoot: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, th: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, thead: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, time: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, title: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, tr: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, track: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, tt: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, u: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, ul: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, var_: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, video: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, wbr: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement, xmp: (arg1?: string | Record<string, string | boolean> | Node[] | undefined, arg2?: string | Node[] | undefined) => HTMLElement;
export { stream, a, abbr, acronym, address, applet, area, article, aside, audio, b, base, basefont, bdo, bgsound, big, blink, blockquote, body, br, button, canvas, caption, center, cite, code, col, colgroup, command, datalist, dd, del, details, dfn, div, dl, dt, em, embed, fieldset, figcaption, figure, font, footer, form, frame, frameset, h1, h2, h3, h4, h5, h6, head, header, hgroup, hr, html, i, iframe, img, input, ins, isindex, kbd, keygen, label, legend, li, link, listing, map, mark, marquee, math, menu, meta, meter, nav, nextid, nobr, noembed, noframes, noscript, object, ol, optgroup, option, output, p, param, plaintext, pre, progress, q, rp, rt, ruby, s, samp, script, section, select, small, source, spacer, span, strike, strong, style, sub, sup, summary, svg, table, tbody, td, textarea, tfoot, th, thead, time, title, tr, track, tt, u, ul, var_, video, wbr, xmp };
