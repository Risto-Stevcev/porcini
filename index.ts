import stream from './stream'

type text = string
type children = text | Node[]
type attributes = Record<string, string | boolean>

const getArgs = (
  arg1?: children | attributes,
  arg2?: children
): { attributes?: attributes; children?: children } => {
  let attributes: attributes | undefined, children: children | undefined

  if (arg1) {
    if (typeof arg1 === 'string') children = arg1
    else if (arg1 instanceof Array) children = arg1
    else attributes = arg1
  }
  if (arg2 && (arg2 === 'string' || arg2 instanceof Node)) children = arg2
  return { attributes, children }
}

const _element = (tag: string) => (
  arg1?: children | attributes,
  arg2?: children
) => {
  const { attributes, children } = getArgs(arg1, arg2)
  const element = document.createElement(tag)

  if (attributes) {
    let keys = Object.keys(attributes)
    for (let i = 0; i < keys.length; i++) {
      let attribute = keys[i],
        value = attributes[keys[i]]

      if (typeof value === 'string') element.setAttribute(attribute, value)
      else if (value) element.setAttribute(attribute, '')
      else element.removeAttribute(attribute)
    }
  }
  if (children) {
    if (typeof children == 'string') element.textContent = children
    else
      for (let i = 0; i < children.length; i++) element.appendChild(children[i])
  }
  return element
}

const a = _element('a'),
  abbr = _element('abbr'),
  acronym = _element('acronym'),
  address = _element('address'),
  applet = _element('applet'),
  area = _element('area'),
  article = _element('article'),
  aside = _element('aside'),
  audio = _element('audio'),
  b = _element('b'),
  base = _element('base'),
  basefont = _element('basefont'),
  bdo = _element('bdo'),
  bgsound = _element('bgsound'),
  big = _element('big'),
  blink = _element('blink'),
  blockquote = _element('blockquote'),
  body = _element('body'),
  br = _element('br'),
  button = _element('button'),
  canvas = _element('canvas'),
  caption = _element('caption'),
  center = _element('center'),
  cite = _element('cite'),
  code = _element('code'),
  col = _element('col'),
  colgroup = _element('colgroup'),
  command = _element('command'),
  datalist = _element('datalist'),
  dd = _element('dd'),
  del = _element('del'),
  details = _element('details'),
  dfn = _element('dfn'),
  div = _element('div'),
  dl = _element('dl'),
  dt = _element('dt'),
  em = _element('em'),
  embed = _element('embed'),
  fieldset = _element('fieldset'),
  figcaption = _element('figcaption'),
  figure = _element('figure'),
  font = _element('font'),
  footer = _element('footer'),
  form = _element('form'),
  frame = _element('frame'),
  frameset = _element('frameset'),
  h1 = _element('h1'),
  h2 = _element('h2'),
  h3 = _element('h3'),
  h4 = _element('h4'),
  h5 = _element('h5'),
  h6 = _element('h6'),
  head = _element('head'),
  header = _element('header'),
  hgroup = _element('hgroup'),
  hr = _element('hr'),
  html = _element('html'),
  i = _element('i'),
  iframe = _element('iframe'),
  img = _element('img'),
  input = _element('input'),
  ins = _element('ins'),
  isindex = _element('isindex'),
  kbd = _element('kbd'),
  keygen = _element('keygen'),
  label = _element('label'),
  legend = _element('legend'),
  li = _element('li'),
  link = _element('link'),
  listing = _element('listing'),
  map = _element('map'),
  mark = _element('mark'),
  marquee = _element('marquee'),
  math = _element('math'),
  menu = _element('menu'),
  meta = _element('meta'),
  meter = _element('meter'),
  nav = _element('nav'),
  nextid = _element('nextid'),
  nobr = _element('nobr'),
  noembed = _element('noembed'),
  noframes = _element('noframes'),
  noscript = _element('noscript'),
  object = _element('object'),
  ol = _element('ol'),
  optgroup = _element('optgroup'),
  option = _element('option'),
  output = _element('output'),
  p = _element('p'),
  param = _element('param'),
  plaintext = _element('plaintext'),
  pre = _element('pre'),
  progress = _element('progress'),
  q = _element('q'),
  rp = _element('rp'),
  rt = _element('rt'),
  ruby = _element('ruby'),
  s = _element('s'),
  samp = _element('samp'),
  script = _element('script'),
  section = _element('section'),
  select = _element('select'),
  small = _element('small'),
  source = _element('source'),
  spacer = _element('spacer'),
  span = _element('span'),
  strike = _element('strike'),
  strong = _element('strong'),
  style = _element('style'),
  sub = _element('sub'),
  sup = _element('sup'),
  summary = _element('summary'),
  svg = _element('svg'),
  table = _element('table'),
  tbody = _element('tbody'),
  td = _element('td'),
  textarea = _element('textarea'),
  tfoot = _element('tfoot'),
  th = _element('th'),
  thead = _element('thead'),
  time = _element('time'),
  title = _element('title'),
  tr = _element('tr'),
  track = _element('track'),
  tt = _element('tt'),
  u = _element('u'),
  ul = _element('ul'),
  var_ = _element('var'),
  video = _element('video'),
  wbr = _element('wbr'),
  xmp = _element('xmp')

export {
  stream,
  a,
  abbr,
  acronym,
  address,
  applet,
  area,
  article,
  aside,
  audio,
  b,
  base,
  basefont,
  bdo,
  bgsound,
  big,
  blink,
  blockquote,
  body,
  br,
  button,
  canvas,
  caption,
  center,
  cite,
  code,
  col,
  colgroup,
  command,
  datalist,
  dd,
  del,
  details,
  dfn,
  div,
  dl,
  dt,
  em,
  embed,
  fieldset,
  figcaption,
  figure,
  font,
  footer,
  form,
  frame,
  frameset,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  head,
  header,
  hgroup,
  hr,
  html,
  i,
  iframe,
  img,
  input,
  ins,
  isindex,
  kbd,
  keygen,
  label,
  legend,
  li,
  link,
  listing,
  map,
  mark,
  marquee,
  math,
  menu,
  meta,
  meter,
  nav,
  nextid,
  nobr,
  noembed,
  noframes,
  noscript,
  object,
  ol,
  optgroup,
  option,
  output,
  p,
  param,
  plaintext,
  pre,
  progress,
  q,
  rp,
  rt,
  ruby,
  s,
  samp,
  script,
  section,
  select,
  small,
  source,
  spacer,
  span,
  strike,
  strong,
  style,
  sub,
  sup,
  summary,
  svg,
  table,
  tbody,
  td,
  textarea,
  tfoot,
  th,
  thead,
  time,
  title,
  tr,
  track,
  tt,
  u,
  ul,
  var_,
  video,
  wbr,
  xmp
}
